parameters:
	ignoreErrors:
		-
			message: "#^Unsafe usage of new static\\(\\)\\.$#"
			count: 1
			path: src/Application/DataTransferObject/BaseDataTransferObject.php

		-
			message: "#^Parameter \\#1 \\$className of method Doctrine\\\\ORM\\\\EntityManagerInterface\\:\\:getRepository\\(\\) expects class\\-string\\<object\\>, string given\\.$#"
			count: 1
			path: src/Application/Service/EntityManagerService.php

		-
			message: "#^Parameter \\#1 \\$entityName of method Doctrine\\\\ORM\\\\EntityManagerInterface\\:\\:getReference\\(\\) expects class\\-string\\<object\\>, string given\\.$#"
			count: 1
			path: src/Application/Service/EntityManagerService.php

		-
			message: "#^Unable to resolve the template type T in call to method Doctrine\\\\ORM\\\\EntityManagerInterface\\:\\:getReference\\(\\)$#"
			count: 1
			path: src/Application/Service/EntityManagerService.php

		-
			message: "#^Unable to resolve the template type T in call to method Doctrine\\\\ORM\\\\EntityManagerInterface\\:\\:getRepository\\(\\)$#"
			count: 1
			path: src/Application/Service/EntityManagerService.php

		-
			message: "#^Method App\\\\Domain\\\\ApiUser\\\\Facade\\\\ApiUserFacade\\:\\:findByApiKey\\(\\) should return App\\\\Domain\\\\ApiUser\\\\Entity\\\\ApiUser\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/ApiUser/Facade/ApiUserFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Comment\\\\Facade\\\\CommentFacade\\:\\:getCommentByOwnerEvent\\(\\) should return App\\\\Domain\\\\Comment\\\\Entity\\\\Comment\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/Comment/Facade/CommentFacade.php

		-
			message: "#^Cannot cast mixed to int\\.$#"
			count: 2
			path: src/Domain/Conversation/Facade/ConversationMessageFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Conversation\\\\Facade\\\\ConversationMessageFacade\\:\\:getMessagesByConversation\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Conversation/Facade/ConversationMessageFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Conversation\\\\Facade\\\\ConversationMessageFacade\\:\\:getMessagesByConversationAfterDate\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Conversation/Facade/ConversationMessageFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Conversation\\\\Facade\\\\ConversationMessageFacade\\:\\:getUnreadMessagesByUser\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Conversation/Facade/ConversationMessageFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Conversation\\\\Service\\\\ConversationStatusService\\:\\:getConversationMessageStatus\\(\\) should return App\\\\Domain\\\\ConversationMessageStatus\\\\Entity\\\\ConversationMessageStatus\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/Conversation/Service/ConversationStatusService.php

		-
			message: "#^While loop condition is always true\\.$#"
			count: 1
			path: src/Domain/Conversation/Service/ConversationStreamService.php

		-
			message: "#^Method App\\\\Domain\\\\EmailNotificationQueue\\\\Facade\\\\EmailNotificationQueueFacade\\:\\:getOneByUuid\\(\\) should return App\\\\Domain\\\\EmailNotificationQueue\\\\Entity\\\\EmailNotificationQueue\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/EmailNotificationQueue/Facade/EmailNotificationQueueFacade.php

		-
			message: "#^Method App\\\\Domain\\\\EmailNotificationQueue\\\\Facade\\\\EmailNotificationQueueFacade\\:\\:getOneReadyForSender\\(\\) should return App\\\\Domain\\\\EmailNotificationQueue\\\\Entity\\\\EmailNotificationQueue\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/EmailNotificationQueue/Facade/EmailNotificationQueueFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Event\\\\Facade\\\\EventFacade\\:\\:find\\(\\) should return App\\\\Domain\\\\Event\\\\Entity\\\\Event\\|null but returns object\\|null\\.$#"
			count: 1
			path: src/Domain/Event/Facade/EventFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Event\\\\Facade\\\\EventFacade\\:\\:getEventsByOwner\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Event/Facade/EventFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Event\\\\Facade\\\\EventFacade\\:\\:getEventsByParticipant\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Event/Facade/EventFacade.php

		-
			message: "#^Property App\\\\Domain\\\\EventAddress\\\\Entity\\\\EventAddress\\:\\:\\$latitude type mapping mismatch\\: database can contain string\\|null but property expects float\\|null\\.$#"
			count: 1
			path: src/Domain/EventAddress/Entity/EventAddress.php

		-
			message: "#^Property App\\\\Domain\\\\EventAddress\\\\Entity\\\\EventAddress\\:\\:\\$longitude type mapping mismatch\\: database can contain string\\|null but property expects float\\|null\\.$#"
			count: 1
			path: src/Domain/EventAddress/Entity/EventAddress.php

		-
			message: "#^Method App\\\\Domain\\\\EventAddress\\\\Facade\\\\EventAddressFacade\\:\\:getSkypeByOwner\\(\\) should return App\\\\Domain\\\\EventAddress\\\\Entity\\\\EventAddress\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/EventAddress/Facade/EventAddressFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaFacade\\:\\:find\\(\\) should return App\\\\Domain\\\\Media\\\\Entity\\\\Media\\|null but returns object\\|null\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaFacade\\:\\:findAll\\(\\) should return array\\<App\\\\Domain\\\\Media\\\\Entity\\\\Media\\> but returns mixed\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaFacade\\:\\:findByMediaName\\(\\) should return App\\\\Domain\\\\Media\\\\Entity\\\\Media\\|null but returns object\\|null\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaMimeTypeFacade\\:\\:getFormValidationMimeTypes\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaMimeTypeFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaMimeTypeFacade\\:\\:getMimeTypeByName\\(\\) should return App\\\\Domain\\\\MediaMimeType\\\\Entity\\\\MediaMimeType\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaMimeTypeFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaMimeTypeFacade\\:\\:getMimeTypesByOwner\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaMimeTypeFacade.php

		-
			message: "#^Parameter \\#1 \\$array of function array_keys expects array, mixed given\\.$#"
			count: 2
			path: src/Domain/Media/Facade/MediaMimeTypeFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaTypeFacade\\:\\:find\\(\\) should return App\\\\Domain\\\\MediaType\\\\Entity\\\\MediaType\\|null but returns object\\|null\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaTypeFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Media\\\\Facade\\\\MediaTypeFacade\\:\\:findAll\\(\\) should return array\\<App\\\\Domain\\\\MediaType\\\\Entity\\\\MediaType\\> but returns array\\<int, object\\>\\.$#"
			count: 1
			path: src/Domain/Media/Facade/MediaTypeFacade.php

		-
			message: "#^Parameter \\#1 \\$categories of method App\\\\Domain\\\\Media\\\\Entity\\\\Media\\:\\:setCategories\\(\\) expects Doctrine\\\\Common\\\\Collections\\\\Collection, Doctrine\\\\Common\\\\Collections\\\\Collection\\|null given\\.$#"
			count: 1
			path: src/Domain/Media/Factory/MediaFactory.php

		-
			message: "#^Parameter \\#1 \\$mediaName of method App\\\\Domain\\\\Media\\\\Entity\\\\Media\\:\\:setMediaName\\(\\) expects string, string\\|null given\\.$#"
			count: 1
			path: src/Domain/Media/Factory/MediaFactory.php

		-
			message: "#^Parameter \\#1 \\$name of method App\\\\Domain\\\\Media\\\\Entity\\\\Media\\:\\:setName\\(\\) expects string, string\\|null given\\.$#"
			count: 1
			path: src/Domain/Media/Factory/MediaFactory.php

		-
			message: "#^Parameter \\#1 \\$type of method App\\\\Domain\\\\Media\\\\Entity\\\\Media\\:\\:setType\\(\\) expects App\\\\Domain\\\\MediaType\\\\Entity\\\\MediaType, App\\\\Domain\\\\MediaType\\\\Entity\\\\MediaType\\|null given\\.$#"
			count: 1
			path: src/Domain/Media/Factory/MediaFactory.php

		-
			message: "#^Method App\\\\Domain\\\\MediaCategory\\\\Facade\\\\MediaCategoryFacade\\:\\:getMediaCategoriesByOwner\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/MediaCategory/Facade/MediaCategoryFacade.php

		-
			message: "#^Method App\\\\Domain\\\\MediaCategory\\\\Facade\\\\MediaCategoryFacade\\:\\:getMediaCategoriesByOwners\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/MediaCategory/Facade/MediaCategoryFacade.php

		-
			message: "#^Cannot call method getCreatedAt\\(\\) on mixed\\.$#"
			count: 1
			path: src/Domain/ResetPassword/Facade/ResetPasswordFacade.php

		-
			message: "#^Cannot call method isExpired\\(\\) on mixed\\.$#"
			count: 1
			path: src/Domain/ResetPassword/Facade/ResetPasswordFacade.php

		-
			message: "#^Method App\\\\Domain\\\\ResetPassword\\\\Facade\\\\ResetPasswordFacade\\:\\:findResetPasswordByToken\\(\\) should return App\\\\Domain\\\\ResetPassword\\\\Entity\\\\ResetPassword\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/ResetPassword/Facade/ResetPasswordFacade.php

		-
			message: "#^Parameter \\#2 \\$plainPassword of method Symfony\\\\Component\\\\PasswordHasher\\\\Hasher\\\\UserPasswordHasherInterface\\:\\:hashPassword\\(\\) expects string, mixed given\\.$#"
			count: 1
			path: src/Domain/ResetPassword/Http/ResetPasswordResetHandle.php

		-
			message: "#^Cannot cast mixed to int\\.$#"
			count: 1
			path: src/Domain/SystemEvent/Facade/SystemEventFacade.php

		-
			message: "#^Method App\\\\Domain\\\\SystemEvent\\\\Facade\\\\SystemEventRecipientFacade\\:\\:getUnreadSystemEventsByRecipient\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/SystemEvent/Facade/SystemEventRecipientFacade.php

		-
			message: "#^Cannot access offset 'deadline' on mixed\\.$#"
			count: 1
			path: src/Domain/Task/Facade/TaskDeadlineFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Task\\\\Facade\\\\TaskDeadlineFacade\\:\\:getTasksAfterDeadline\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/Task/Facade/TaskDeadlineFacade.php

		-
			message: "#^Cannot cast mixed to int\\.$#"
			count: 1
			path: src/Domain/Task/Facade/TaskFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Task\\\\Facade\\\\TaskFacade\\:\\:find\\(\\) should return App\\\\Domain\\\\Task\\\\Entity\\\\Task\\|null but returns object\\|null\\.$#"
			count: 1
			path: src/Domain/Task/Facade/TaskFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Task\\\\Facade\\\\TaskFacade\\:\\:findAll\\(\\) should return array\\<App\\\\Domain\\\\Task\\\\Entity\\\\Task\\> but returns mixed\\.$#"
			count: 1
			path: src/Domain/Task/Facade/TaskFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Task\\\\Facade\\\\TaskFacade\\:\\:findAllByOwnerComplete\\(\\) should return array\\<App\\\\Domain\\\\Task\\\\Entity\\\\Task\\> but returns mixed\\.$#"
			count: 1
			path: src/Domain/Task/Facade/TaskFacade.php

		-
			message: "#^Cannot call method getId\\(\\) on App\\\\Domain\\\\Task\\\\Entity\\\\Task\\|null\\.$#"
			count: 1
			path: src/Domain/Task/Form/Factory/TaskFormFactory.php

		-
			message: "#^Argument of an invalid type iterable\\|null supplied for foreach, only iterables are supported\\.$#"
			count: 1
			path: src/Domain/Task/Http/Ajax/TaskCreateSeveralHandle.php

		-
			message: "#^Method App\\\\Domain\\\\User\\\\Facade\\\\UserFacade\\:\\:findOneByEmail\\(\\) should return App\\\\Domain\\\\User\\\\Entity\\\\User\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/User/Facade/UserFacade.php

		-
			message: "#^Method App\\\\Domain\\\\User\\\\Facade\\\\UserFacade\\:\\:findOneByToken\\(\\) should return App\\\\Domain\\\\User\\\\Entity\\\\User\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/User/Facade/UserFacade.php

		-
			message: "#^Method App\\\\Domain\\\\User\\\\Facade\\\\UserFacade\\:\\:findOneByUsername\\(\\) should return App\\\\Domain\\\\User\\\\Entity\\\\User\\|null but returns mixed\\.$#"
			count: 1
			path: src/Domain/User/Facade/UserFacade.php

		-
			message: "#^Method App\\\\Domain\\\\User\\\\Service\\\\UserWorkService\\:\\:getWorkBy\\(\\) should return Doctrine\\\\Common\\\\Collections\\\\ArrayCollection&iterable\\<App\\\\Domain\\\\User\\\\Entity\\\\User\\> but returns Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\Work\\\\Entity\\\\Work\\>\\.$#"
			count: 1
			path: src/Domain/User/Service/UserWorkService.php

		-
			message: "#^Property App\\\\Domain\\\\UserGroup\\\\Entity\\\\Group\\:\\:\\$users type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\User\\\\Entity\\\\User\\>\\.$#"
			count: 1
			path: src/Domain/UserGroup/Entity/Group.php

		-
			message: "#^Parameter \\#1 \\$name of method App\\\\Domain\\\\UserGroup\\\\Entity\\\\Group\\:\\:setName\\(\\) expects string, string\\|null given\\.$#"
			count: 1
			path: src/Domain/UserGroup/Factory/UserGroupFactory.php

		-
			message: "#^Parameter \\#1 \\$name of method App\\\\Domain\\\\Media\\\\Entity\\\\Media\\:\\:setName\\(\\) expects string, string\\|null given\\.$#"
			count: 1
			path: src/Domain/Version/Factory/VersionFactory.php

		-
			message: "#^Method App\\\\Domain\\\\Widget\\\\Service\\\\WidgetManagerService\\:\\:getWidget\\(\\) should return App\\\\Application\\\\Interfaces\\\\Widget\\\\WidgetInterface but returns mixed\\.$#"
			count: 1
			path: src/Domain/Widget/Service/WidgetManagerService.php

		-
			message: "#^While loop condition is always true\\.$#"
			count: 1
			path: src/Domain/Widget/Service/WidgetStreamService.php

		-
			message: "#^Anonymous function should return int\\|false but returns bool\\|int\\.$#"
			count: 1
			path: src/Domain/Work/Elastica/WorkSearch.php

		-
			message: "#^Argument of an invalid type mixed supplied for foreach, only iterables are supported\\.$#"
			count: 1
			path: src/Domain/Work/Elastica/WorkSearch.php

		-
			message: "#^Call to an undefined method Traversable\\<\\(int\\|string\\), object\\>\\:\\:uasort\\(\\)\\.$#"
			count: 1
			path: src/Domain/Work/Elastica/WorkSearch.php

		-
			message: "#^Call to an undefined method object\\:\\:getId\\(\\)\\.$#"
			count: 1
			path: src/Domain/Work/Elastica/WorkSearch.php

		-
			message: "#^Method App\\\\Domain\\\\Work\\\\Elastica\\\\WorkSearch\\:\\:filterWorkList\\(\\) should return ArrayIterator but returns Traversable\\<\\(int\\|string\\), object\\>\\.$#"
			count: 1
			path: src/Domain/Work/Elastica/WorkSearch.php

		-
			message: "#^Parameter \\#1 \\$value of function count expects array\\|Countable, iterable given\\.$#"
			count: 1
			path: src/Domain/Work/Elastica/WorkSearch.php

		-
			message: "#^Part \\$field \\(mixed\\) of encapsed string cannot be cast to string\\.$#"
			count: 1
			path: src/Domain/Work/Elastica/WorkSearch.php

		-
			message: "#^Property App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:\\$categories type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\WorkCategory\\\\Entity\\\\WorkCategory\\>\\.$#"
			count: 1
			path: src/Domain/Work/Entity/Work.php

		-
			message: "#^Property App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:\\$conversations type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\Conversation\\\\Entity\\\\Conversation\\>\\.$#"
			count: 1
			path: src/Domain/Work/Entity/Work.php

		-
			message: "#^Property App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:\\$eventParticipants type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\EventParticipant\\\\Entity\\\\EventParticipant\\>\\.$#"
			count: 1
			path: src/Domain/Work/Entity/Work.php

		-
			message: "#^Property App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:\\$medias type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\Media\\\\Entity\\\\Media\\>\\.$#"
			count: 1
			path: src/Domain/Work/Entity/Work.php

		-
			message: "#^Property App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:\\$systemEvents type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\SystemEvent\\\\Entity\\\\SystemEvent\\>\\.$#"
			count: 1
			path: src/Domain/Work/Entity/Work.php

		-
			message: "#^Property App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:\\$tasks type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\Task\\\\Entity\\\\Task\\>\\.$#"
			count: 1
			path: src/Domain/Work/Entity/Work.php

		-
			message: "#^Method App\\\\Domain\\\\Work\\\\Facade\\\\WorkFacade\\:\\:find\\(\\) should return App\\\\Domain\\\\Work\\\\Entity\\\\Work\\|null but returns object\\|null\\.$#"
			count: 1
			path: src/Domain/Work/Facade/WorkFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Work\\\\Facade\\\\WorkFacade\\:\\:findAll\\(\\) should return array\\<App\\\\Domain\\\\Work\\\\Entity\\\\Work\\> but returns mixed\\.$#"
			count: 1
			path: src/Domain/Work/Facade/WorkFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Work\\\\Facade\\\\WorkFacade\\:\\:getWorksByAuthorStatus\\(\\) should return array\\<App\\\\Domain\\\\Work\\\\Entity\\\\Work\\> but returns mixed\\.$#"
			count: 1
			path: src/Domain/Work/Facade/WorkFacade.php

		-
			message: "#^Method App\\\\Domain\\\\Work\\\\Facade\\\\WorkFacade\\:\\:getWorksByAuthorSupervisorStatus\\(\\) should return array\\<App\\\\Domain\\\\Work\\\\Entity\\\\Work\\> but returns mixed\\.$#"
			count: 1
			path: src/Domain/Work/Facade/WorkFacade.php

		-
			message: "#^Parameter \\#1 \\$author of method App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:setAuthor\\(\\) expects App\\\\Domain\\\\User\\\\Entity\\\\User, App\\\\Domain\\\\User\\\\Entity\\\\User\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Factory/WorkFactory.php

		-
			message: "#^Parameter \\#1 \\$categories of method App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:setCategories\\(\\) expects Doctrine\\\\Common\\\\Collections\\\\Collection, Doctrine\\\\Common\\\\Collections\\\\Collection\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Factory/WorkFactory.php

		-
			message: "#^Parameter \\#1 \\$deadline of method App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:setDeadline\\(\\) expects DateTime, DateTime\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Factory/WorkFactory.php

		-
			message: "#^Parameter \\#1 \\$status of method App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:setStatus\\(\\) expects App\\\\Domain\\\\WorkStatus\\\\Entity\\\\WorkStatus, App\\\\Domain\\\\WorkStatus\\\\Entity\\\\WorkStatus\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Factory/WorkFactory.php

		-
			message: "#^Parameter \\#1 \\$supervisor of method App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:setSupervisor\\(\\) expects App\\\\Domain\\\\User\\\\Entity\\\\User, App\\\\Domain\\\\User\\\\Entity\\\\User\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Factory/WorkFactory.php

		-
			message: "#^Parameter \\#1 \\$title of method App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:setTitle\\(\\) expects string, string\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Factory/WorkFactory.php

		-
			message: "#^Parameter \\#1 \\$type of method App\\\\Domain\\\\Work\\\\Entity\\\\Work\\:\\:setType\\(\\) expects App\\\\Domain\\\\WorkType\\\\Entity\\\\WorkType, App\\\\Domain\\\\WorkType\\\\Entity\\\\WorkType\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Factory/WorkFactory.php

		-
			message: "#^Call to an undefined method Doctrine\\\\Persistence\\\\ObjectRepository\\:\\:allByWork\\(\\)\\.$#"
			count: 3
			path: src/Domain/Work/Service/WorkDetailTabService.php

		-
			message: "#^Call to an undefined method Doctrine\\\\Persistence\\\\ObjectRepository\\:\\:allByWorkUser\\(\\)\\.$#"
			count: 1
			path: src/Domain/Work/Service/WorkDetailTabService.php

		-
			message: "#^Cannot call method getConversation\\(\\) on mixed\\.$#"
			count: 1
			path: src/Domain/Work/Service/WorkDetailTabService.php

		-
			message: "#^Parameter \\#2 \\$user of static method App\\\\Domain\\\\Conversation\\\\Helper\\\\ConversationHelper\\:\\:getConversationOpposite\\(\\) expects App\\\\Domain\\\\User\\\\Entity\\\\User, App\\\\Domain\\\\User\\\\Entity\\\\User\\|null given\\.$#"
			count: 1
			path: src/Domain/Work/Service/WorkDetailTabService.php

		-
			message: "#^Property App\\\\Domain\\\\WorkCategory\\\\Entity\\\\WorkCategory\\:\\:\\$works type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\Work\\\\Entity\\\\Work\\>\\.$#"
			count: 1
			path: src/Domain/WorkCategory/Entity/WorkCategory.php

		-
			message: "#^Parameter \\#1 \\$name of method App\\\\Domain\\\\WorkCategory\\\\Entity\\\\WorkCategory\\:\\:setName\\(\\) expects string, string\\|null given\\.$#"
			count: 1
			path: src/Domain/WorkCategory/Factory/WorkCategoryFactory.php

		-
			message: "#^Parameter \\#1 \\$owner of method App\\\\Domain\\\\WorkCategory\\\\Entity\\\\WorkCategory\\:\\:setOwner\\(\\) expects App\\\\Domain\\\\User\\\\Entity\\\\User, App\\\\Domain\\\\User\\\\Entity\\\\User\\|null given\\.$#"
			count: 1
			path: src/Domain/WorkCategory/Factory/WorkCategoryFactory.php

		-
			message: "#^Parameter \\#1 \\$works of method App\\\\Domain\\\\WorkCategory\\\\Entity\\\\WorkCategory\\:\\:setWorks\\(\\) expects Doctrine\\\\Common\\\\Collections\\\\Collection, Doctrine\\\\Common\\\\Collections\\\\Collection\\|null given\\.$#"
			count: 1
			path: src/Domain/WorkCategory/Factory/WorkCategoryFactory.php

		-
			message: "#^Cannot access offset 'deadline' on mixed\\.$#"
			count: 1
			path: src/Domain/WorkDeadline/Facade/WorkDeadlineFacade.php

		-
			message: "#^Cannot access offset 'deadlineProgram' on mixed\\.$#"
			count: 1
			path: src/Domain/WorkDeadline/Facade/WorkDeadlineFacade.php

		-
			message: "#^Property App\\\\Domain\\\\WorkStatus\\\\Entity\\\\WorkStatus\\:\\:\\$works type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\Work\\\\Entity\\\\Work\\>\\.$#"
			count: 1
			path: src/Domain/WorkStatus/Entity/WorkStatus.php

		-
			message: "#^Method App\\\\Domain\\\\WorkStatus\\\\Facade\\\\WorkStatusFacade\\:\\:find\\(\\) should return App\\\\Domain\\\\WorkStatus\\\\Entity\\\\WorkStatus\\|null but returns object\\|null\\.$#"
			count: 1
			path: src/Domain/WorkStatus/Facade/WorkStatusFacade.php

		-
			message: "#^Method App\\\\Domain\\\\WorkStatus\\\\Facade\\\\WorkStatusFacade\\:\\:findAll\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/WorkStatus/Facade/WorkStatusFacade.php

		-
			message: "#^Method App\\\\Domain\\\\WorkStatus\\\\Facade\\\\WorkStatusFacade\\:\\:getCountByUser\\(\\) should return array but returns mixed\\.$#"
			count: 1
			path: src/Domain/WorkStatus/Facade/WorkStatusFacade.php

		-
			message: "#^Property App\\\\Domain\\\\WorkType\\\\Entity\\\\WorkType\\:\\:\\$works type mapping mismatch\\: property can contain Doctrine\\\\Common\\\\Collections\\\\Collection but database expects Doctrine\\\\Common\\\\Collections\\\\Collection&iterable\\<App\\\\Domain\\\\Work\\\\Entity\\\\Work\\>\\.$#"
			count: 1
			path: src/Domain/WorkType/Entity/WorkType.php
