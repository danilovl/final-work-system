version: '3.8'

services:
  redis:
    build: docker/redis
    ports:
      - '7102:6379'
  elasticsearch:
    build: docker/elasticsearch
    restart: always
    ports:
      - '7103:9200'
      - '7104:9300'
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=password
#    volumes:
#      - ./docker-data/elasticsearch/data:/usr/share/elasticsearch/data
  rabbitmq:
    build: docker/rabbitmq
    ports:
      - '7105:5672'
      - '7106:15672'
  mysql:
    build: docker/mysql
    restart: always
    ports:
      - '7101:3306'
    volumes:
      - './docker/mysql/conf/custom.cnf:/etc/mysql/conf.d/custom.cnf'
      #      - './docker/mysql/data:/var/lib/mysql/'
    environment:
      - 'MYSQL_ALLOW_EMPTY_PASSWORD=1'
      - 'MYSQL_ROOT_PASSWORD='
      - 'MYSQL_DATABASE=final_work_system'
      - 'MYSQL_USER=root'
      - 'MYSQL_PASSWORD='
  node:
    build:
      context: ./
      dockerfile: ./docker/node/Dockerfile
    volumes:
      - './:/var/www/html/app'
    working_dir: /var/www/html/app
  php:
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
    expose:
      - '9000'
    volumes:
      - './:/var/www/html/app'
      - './docker/php/conf/php-fpm.conf:/etc/php-fpm.conf'
      - './docker/php/conf/php.ini:/usr/local/etc/php/conf.d/100-php.ini'
    working_dir: /var/www/html/app
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://elasticsearch:9200', '-u', 'elastic:password' ]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - redis
      - mysql
      - rabbitmq
      - elasticsearch
      - mercure
  nginx:
    build: docker/nginx
    ports:
      - '7100:80'
    volumes:
      - './:/var/www/html/app'
      - './docker/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - php
  mercure:
    build: docker/mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins "http://work-system.local:8100"
        anonymous
    ports:
      - '7107:80'
  minio:
    build: docker/minio
    command: server --console-address ":9001" /data/
    ports:
      - '7108:9000'
      - '7109:9001'
    environment:
      MINIO_ROOT_USER: MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: MINIO_ROOT_PASSWORD
    volumes:
      - ./public/upload:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
  kibana:
    build: docker/kibana
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: superuser
      ELASTICSEARCH_PASSWORD: superuser
    ports:
      - '7110:5601'
    depends_on:
      - elasticsearch
