{% stylesheets filter='cssrewrite,scssphp'
    'vendor/select2/dist/css/select2.min.css'
    'vendor/fullcalendar/dist/fullcalendar.min.css' %}
    <link rel="stylesheet" href="/compiled{{ asset_url }}"/>
{% endstylesheets %}

<div id='appointmentCalendar'></div>
<div id="CalenderModalNew"
     class="modal fade"
     tabindex="-1"
     role="dialog"
     aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button"
                        class="close"
                        data-dismiss="modal"
                        aria-hidden="true">
                    ×
                </button>
            </div>
            <div class="modal-body">
                <div id="testmodal" style="padding: 5px 20px;">

                    {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

                    <div class="item form-group">
                        {{ form_label(form.address,  'finalwork.form.label.address' , {'label_attr': {'class': 'control-label col-md-3 col-sm-3 col-xs-12'}}) }}
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            {{ form_widget(form.address, {'attr': {'class': 'form-control'}} ) }}
                        </div>

                        {% if not form.address.vars.valid %}
                            <div class="col-md-3 col-sm-3 col-xs-12 red">
                                {{ form_errors(form.address) }}
                            </div>
                        {% endif %}

                        {{ form_label(form.participant,  'finalwork.form.label.participant' , {'label_attr': {'class': 'control-label col-md-3 col-sm-3 col-xs-12'}}) }}
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            {{ form_widget(form.participant, {'attr': {'class': 'form-control'}} ) }}
                        </div>

                        {% if not form.participant.vars.valid %}
                            <div class="col-md-3 col-sm-3 col-xs-12 red">
                                {{ form_errors(form.address) }}
                            </div>
                        {% endif %}
                    </div>

                    {{ form_end(form) }}

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default antoclose" data-dismiss="modal">
                    {{ 'finalwork.form.action.close' | trans() }}
                </button>
                <button type="button" class="btn btn-primary antosubmit">
                    {{ 'finalwork.form.action.save' | trans() }}
                </button>
            </div>
        </div>
    </div>
</div>
<div id="CalenderModalEdit"
     class="modal fade"
     tabindex="-1"
     role="dialog"
     aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button"
                        class="close"
                        data-dismiss="modal"
                        aria-hidden="true">×
                </button>
                <h4 class="modal-title"
                    id="myModalLabel2">Edit Calendar Entry
                </h4>
            </div>
            <div class="modal-body">
                <div id="testmodal2" style="padding: 5px 20px;">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-default antoclose2"
                        data-dismiss="modal">
                    {{ 'finalwork.form.action.close' | trans() }}
                </button>
                <button type="button"
                        class="btn btn-primary antosubmit2">
                    {{ 'finalwork.form.action.save' | trans() }}
                </button>
            </div>
        </div>
    </div>
</div>

<div id="fc_create" data-toggle="modal" data-target="#CalenderModalNew"></div>
<div id="fc_edit" data-toggle="modal" data-target="#CalenderModalEdit"></div>

<div id="fullCalModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button"
                        class="close"
                        data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                    <span class="sr-only">close</span>
                </button>
                <h4 id="modalTitle" class="modal-title"></h4>
            </div>
            <div class="modal-footer">
                <button id="eventDelete"
                        type="button"
                        class="btn btn-danger"
                        data-dismiss="modal">
                    {{ 'finalwork.form.action.delete' | trans() }}
                </button>

                <a id="eventDetail"
                   class="btn btn-primary"
                   target="_blank">
                    {{ 'finalwork.form.action.show_detail' | trans() }}
                </a>
                <button type="button"
                        class="btn btn-default"
                        data-dismiss="modal">
                    {{ 'finalwork.form.action.close' | trans() }}
                </button>
            </div>
        </div>
    </div>
</div>

{% javascripts  filter='jsqueeze'
    'vendor/select2/dist/js/select2.full.min.js'
    'vendor/moment/min/moment.min.js'
    'vendor/fullcalendar/dist/fullcalendar.min.js'
    'vendor/fullcalendar/dist/lang-all.js' %}
    <script src="/compiled{{ asset_url }}"></script>
{% endjavascripts %}

<script>
    var locale = '{{ app.request.locale }}';

    function initAppointmentCalendar(locale) {

        if (typeof ($.fn.fullCalendar) === 'undefined') {
            return;
        }

        var start,
            end;

        var calendar = $('#appointmentCalendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay,listMonth'
                },
                lang: locale,
                selectable: true,
                selectHelper: true,
                editable: true,
                droppable: true,
                select: function (start, end, allDay) {
                    $('#fc_create').click();

                    start = start.format("YYYY-MM-DD HH:mm:ss");
                    end = end.format("YYYY-MM-DD HH:mm:ss");

                    $(".antosubmit").on("click", function () {
                        var form = $('form');

                        $.ajax({
                            url: "{{ path('appointment_calendar_create_ajax') }}",
                            data: form.serialize() + '&start=' + start + '&end=' + end,
                            type: 'POST',
                            dataType: 'json',
                            success: function (response) {
                                if (response.valid === true) {
                                    calendar.fullCalendar('renderEvent', {
                                            id: response.event.id,
                                            title: response.event.title,
                                            start: response.event.start,
                                            end: response.event.end,
                                            color: response.event.color,
                                            allDay: false
                                        },
                                        true // make the event "stick"
                                    );
                                }

                                for (var type in response.notifyMessage) {
                                    notifyMessage(type, response.notifyMessage[type]);
                                }
                            }
                        });

                        calendar.fullCalendar('unselect');

                        $('.antoclose').click();

                        return false;
                    });
                },
                eventClick: function (event, jsEvent, view) {
                    $('#modalTitle').html(event.title);
                    $('#eventDetail').attr('href', '');
                    $('#eventDetail').attr('href', event.detail_url);

                    $('#eventDelete').click(function () {
                        $.ajax({
                            url: "{{ path('appointment_calendar_delete_ajax') }}",
                            data: 'id=' + event.id,
                            type: 'POST',
                            dataType: 'json',
                            success: function (response) {
                                if (response.valid === false) {
                                    revertFunc();
                                }

                                for (var type in response.notifyMessage) {
                                    notifyMessage(type, response.notifyMessage[type]);
                                }
                            },
                            error: function () {
                                revertFunc();
                            }
                        });

                        $('#appointmentCalendar').fullCalendar('removeEvents', event._id);
                    });

                    $('#fullCalModal').modal();
                },
                eventDrop: function (event, delta, revertFunc) {
                    start = event.start.format("YYYY-MM-DD HH:mm:ss");
                    end = (event.end === null) ? start : event.end.format("YYYY-MM-DD HH:mm:ss");

                    $.ajax({
                        url: "{{ path('appointment_calendar_edit_ajax') }}",
                        data: 'start=' + start + '&end=' + end + '&id=' + event.id,
                        type: 'POST',
                        dataType: 'json',
                        success: function (response) {
                            if (response.valid === false) {
                                revertFunc();
                            }

                            for (var type in response.notifyMessage) {
                                notifyMessage(type, response.notifyMessage[type]);
                            }
                        },
                        error: function () {
                            revertFunc();
                        }
                    });
                },
                eventResize: function (event, delta, revertFunc) {
                    start = event.start.format("YYYY-MM-DD HH:mm:ss");
                    end = (event.end === null) ? start : event.end.format("YYYY-MM-DD HH:mm:ss");

                    $.ajax({
                        url: "{{ path('appointment_calendar_edit_ajax') }}",
                        data: 'start=' + start + '&end=' + end + '&id=' + event.id,
                        type: 'POST',
                        dataType: 'json',
                        success: function (response) {
                            if (response.valid === false) {
                                revertFunc();
                            }

                            for (var type in response.notifyMessage) {
                                notifyMessage(type, response.notifyMessage[type]);
                            }
                        },
                        error: function () {
                            revertFunc();
                        }
                    });
                },
                events: {{ appointments|raw }}
            }
        );
    }

    $(document).ready(function () {
        initAppointmentCalendar(locale);

        $("#form_address").select2({width: '100%'});
        $("#form_participant").select2({width: '100%'});
    });
</script>
